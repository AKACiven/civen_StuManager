<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.civen.civen_stumanager.mapper.StudentMapper">
    <select id="studentOverall" resultType="com.civen.civen_stumanager.entity.Student">
        select * from stumanager.student;
    </select>
    <select id="updateStudent" parameterType="com.civen.civen_stumanager.entity.Student">
        update stumanager.student set sname = #{sname},ssex = #{ssex},sage = #{sage},sdept = #{sdept} where student.sno = #{sno};
    </select>
    <select id="checkStudent" resultType="com.civen.civen_stumanager.entity.Student">
        select * from stumanager.student where sno = #{sno};
    </select>
    <insert id="addStudent" parameterType="com.civen.civen_stumanager.entity.Student">
        insert into stumanager.student (sno, sname, ssex, sage, sdept) values (#{sno},#{sname},#{ssex},#{sage},#{sdept});
    </insert>
    <select id="chechStuCourse" resultType="com.civen.civen_stumanager.entity.StuCourse">
        select course.cno,course.cname,scc.grade from (select sc.cno,sc.grade from sc where sc.sno = #{sno}) scc,course where scc.cno = course.cno;
    </select>
    <update id="updateStuCoGrade" parameterType="com.civen.civen_stumanager.entity.StuCoGrade">
        update sc set grade = #{grade} where sno = #{sno} and cno = #{cno};
    </update>
    <select id="gradeScale" parameterType="String" statementType="CALLABLE" resultType="com.civen.civen_stumanager.entity.GradeScale">
        {call gradescale(#{sdept})}
    </select>
    <select id="deptofGrades" parameterType="String" statementType="CALLABLE" resultType="com.civen.civen_stumanager.entity.DeptGrades">
        {call deptgrades(#{sdept})}
    </select>
    <select id="coursescale" resultType="com.civen.civen_stumanager.entity.CourseScale">
        select * from course;
    </select>
    <insert id="addCourse" parameterType="com.civen.civen_stumanager.entity.Course">
        insert into course values(#{cno}, #{cname},  #{ccredit});
    </insert>
    <update id="updateCourse" parameterType="com.civen.civen_stumanager.entity.Course">
        update course set ccredit = #{ccredit} where cno = #{cno};
    </update>
    <delete id="squeezeCourse">
        delete from course where course.cno not in (select sc.cno from sc);
    </delete>
    <select id="checkInCourse" parameterType="String" resultType="com.civen.civen_stumanager.entity.InCourse">
        select t.*,sc.grade from (select sno,sname from student where sno in (select sc.Sno from sc where sc.Cno = #{cno})) t,sc where t.sno = sc.sno and sc.cno = #{cno};
    </select>
    <select id="checkOutCourse" parameterType="String" resultType="com.civen.civen_stumanager.entity.OutCourse">
        select sno,sname from student where sno not in (select sc.Sno from sc where sc.Cno = #{cno});
    </select>
    <insert id="addStuToCo" parameterType="com.civen.civen_stumanager.entity.AddStuToCo">
        insert into sc values (#{sno}, #{cno}, null);
    </insert>
</mapper>
